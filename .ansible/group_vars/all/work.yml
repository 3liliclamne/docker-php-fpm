---

# DO NOT ALTER THIS FILE - IT IS AUTOGENERATED.

# The following specifies the order in which tools are being installed.
tools_enabled:
  - angular_cli
  - asgardcms
  - codeception
  - eslint
  - jq
  - lumen
  - mdl
  - phpunit
  - pwncat
  - wpcli
  - yamllint
  - yq


# The following specifies how tools are being installed.
tools_available:
  angular_cli:
    disabled: []
    check: ng version 2>&1 | grep -iE 'Angular CLI:\s*[0-9][.0-9]+' || (ng version; false)
    all:
      type: npm
      package: "@angular/cli"
      binary: ng
      version:
      build_dep: []
      run_dep: []
      pre:
      post:
  asgardcms:
    disabled: [5.2, 5.3, 5.4]
    check: asgardcms --version 2>/dev/null | grep -Ei 'AsgardCMS\sInstaller\s[0-9][.0-9]+' || (asgardcms --version; false)
    all:
      type: composer
      composer: 2
      package: asgardcms/asgardcms-installer
      # https://github.com/AsgardCms/asgardcms-installer/issues/1
      version: dev-master
      flags:
      binary: asgardcms
      build_dep: []
      run_dep: []
      pre:
      post:
  codeception:
    disabled: [5.2, 5.3]
    check: codecept --version 2>/dev/null | grep -E '^Codeception(\sversion)?\s[0-9][.0-9]+$' || (codecept --version; false)
    all:
      type: composer
      composer: 2
      package: codeception/codeception
      # version:
      flags:
      binary: codecept
      build_dep: []
      run_dep: []
      # pre:
      # post:
  eslint:
    disabled: []
    check: eslint -v | grep -E '[0-9][.0-9]+' || (eslint -v; false)
    all:
      type: npm
      package: "eslint"
      binary: eslint
      version:
      build_dep: []
      run_dep: []
      pre:
      post:
  jq:
    disabled: []
    check: jq --version 2>&1 | grep -E '[0-9][.0-9]+' || (jq --version; false)
    all:
      type: apt
      package: jq
  lumen:
    disabled: [5.2, 5.3, 5.4]
    check: lumen --version 2>/dev/null | grep -E '^Lumen Installer\s[0-9][.0-9]+$' || (lumen --version; false)
    all:
      type: composer
      composer: 2
      package: laravel/lumen-installer
      # version:
      flags:
      binary: lumen
      build_dep: []
      run_dep: []
      # pre:
      # post:
  mdl:
    disabled: []
    check: mdl --version | grep -E '[.0-9]+' || (mdl --version; false)
    all:
      type: rubygem
      package: mdl
      # version:
      build_dep: [ruby-dev]
      run_dep: [ruby]
      # pre:
      # post:
    7.2:
      type: rubygem
      version: 0.11.0
      pre: |
        gem install chef-utils -v 16.6.14 \
    7.1:
      type: rubygem
      version: 0.11.0
      pre: |
        gem install chef-utils -v 16.6.14 \
    7.0:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
    5.6:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
    5.5:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
    5.4:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
    5.3:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
    5.2:
      type: rubygem
      version: 0.5.0
      pre: |
        gem install mixlib-config -v 2.2.4 \
  phpunit:
    disabled: [5.2]
    check: phpunit --version | grep -iE '^PHPUnit\s[0-9][.0-9]+' || (phpunit --version; false)
    all:
      type: custom
      command: curl -sS -L --fail "https://phar.phpunit.de/phpunit-${PHP_UNIT_VERSION}.phar" -L -o /usr/local/bin/phpunit
      build_dep: []
      run_dep: []
      pre: PHP_UNIT_VERSION="9"
      post: chmod +x /usr/local/bin/phpunit
    7.2:
      type: custom
      pre: PHP_UNIT_VERSION="8"
    7.1:
      type: custom
      pre: PHP_UNIT_VERSION="7"
    7.0:
      type: custom
      pre: PHP_UNIT_VERSION="6"
    5.6:
      type: custom
      pre: PHP_UNIT_VERSION="5"
    5.5:
      type: custom
      pre: PHP_UNIT_VERSION="4"
    5.4:
      type: custom
      pre: PHP_UNIT_VERSION="4"
    5.3:
      type: custom
      pre: PHP_UNIT_VERSION="4"
  pwncat:
    disabled: []
    check: pwncat --version 2>&1 | grep -E 'Version [0-9][.0-9]+' || (pwncat --version; false)
    all:
      type: pip
      version:
      build_dep: []
      run_dep: []
      pre:
      post: |
        ln -s pwncat /usr/local/bin/netcat \
        && ln -s pwncat /usr/local/bin/nc \
  wpcli:
    disabled: [5.2]
    check: wp --allow-root --version | grep -E '[0-9][.0-9]+' || (wp --allow-root --version; false)
    all:
      type: custom
      command: curl -sS -L --fail "${WPCLI_URL}" -L -o /usr/local/bin/wp
      build_dep: []
      run_dep: []
      pre: WPCLI_URL="https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
      post: chmod +x /usr/local/bin/wp
    5.5:
      type: custom
      pre: WPCLI_URL="https://github.com/wp-cli/wp-cli/releases/download/v2.4.0/wp-cli-2.4.0.phar"
    5.4:
      type: custom
      pre: WPCLI_URL="https://github.com/wp-cli/wp-cli/releases/download/v2.4.0/wp-cli-2.4.0.phar"
    5.3:
      type: custom
      pre: WPCLI_URL="https://github.com/wp-cli/wp-cli/releases/download/v1.5.1/wp-cli-1.5.1.phar"
  yamllint:
    disabled: []
    check: yamllint --version 2>&1 | grep -E '[0-9][.0-9]+' || (yamllint --version; false)
    all:
      type: pip
      version:
      build_dep: []
      run_dep: []
      # pre:
      # post:
  yq:
    disabled: []
    check: yq --version 2>&1 | grep -E '[0-9][.0-9]+' || (yq --version; false)
    all:
      type: pip
      version:
      build_dep: []
      run_dep: []
      pre:
      post:
