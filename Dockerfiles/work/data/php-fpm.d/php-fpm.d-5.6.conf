[www]

; ############################################################
; Required for Dockerization
; ############################################################

; Keep env variables set by docker
clear_env = no

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environement, this can cause some delay in the page
; process time (several ms).
; Default Value: no
catch_workers_output = yes


; ############################################################
; Networking
; ############################################################

[www]
; Ensure to listen here
listen         = 9000
listen.backlog = 1023


; ############################################################
; Timeouts
; ############################################################

[www]
; The timeout for serving a single request after which the worker process will be killed.
; This option should be used when the 'max_execution_time' ini option does not stop script
; execution for some reason.
request_terminate_timeout = 180s


; ############################################################
; Logging
; ############################################################

[global]
error_log = /proc/self/fd/2
log_level = notice

[www]
; if we send this to /proc/self/fd/1, it never appears
access.log = /proc/self/fd/2


; ############################################################
; Worker configuration
; ############################################################

[www]
; The number of child processes is set dynamically based on the following directives:
; pm.max_children, pm.start_servers, pm.min_spare_servers, pm.max_spare_servers.
pm = dynamic

; The maximum number of child processes to be created
pm.max_children = 50

; The number of child processes created on startup. Used only when pm is set to dynamic.
; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2.
pm.start_servers = 10

; The desired minimum number of idle server processes.
pm.min_spare_servers = 5

; The desired maximum number of idle server processes.
pm.max_spare_servers = 15

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries.
; For endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
; Default value: 0.
pm.max_requests = 500


; ############################################################
; User and Group
; ############################################################

[www]
user  = devilbox
group = devilbox
