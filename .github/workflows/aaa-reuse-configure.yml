name: Configure Pipeline for multi-arch image build

on:
  workflow_call:
    ###
    ### Variables
    ###
    inputs:
      enabled:
        description: 'Determines wheather this workflow is enabled at all (will run or skip).'
        required: true
        type: boolean
      can_deploy:
        description: 'Determines wheather this workflow will also deploy (login and push).'
        required: true
        type: boolean
      matrix:
        description: 'The version build matrix as JSON string ( list of objects: [{NAME, VERSION[], ARCH[]}] ).'
        required: true
        type: string
      refs:
        description: 'The ref build matrix as JSON string (list of git refs to build/deploy).'
        required: false
        type: string
    ###
    ### Secrets
    ###
    secrets:
      dockerhub_username:
        description: 'The username for Dockerhub.'
        required: false
      dockerhub_password:
        description: 'The password for Dockerhub.'
        required: false

jobs:

  # -----------------------------------------------------------------------------------------------
  # JOB (1/3): CONFIGURE
  # -----------------------------------------------------------------------------------------------
  configure:
    name: Configure
    if: inputs.enabled
    runs-on: ubuntu-latest

    ###
    ### Outputs
    ###
    outputs:
      can_login: ${{ steps.set-login.outputs.can_login }}
      has_refs: ${{ steps.set-matrix.outputs.has_refs }}
      matrix_build: ${{ steps.set-matrix.outputs.matrix_build }}
      matrix_deploy: ${{ steps.set-matrix.outputs.matrix_deploy }}
      artifact_prefix: ${{ steps.set-artifact-prefix.outputs.prefix }}

    ###
    ### Steps
    ###
    steps:
      - name: "[Set-Output] Set Docker login capabilities"
        id: set-login
        shell: bash
        run: |
          if [ "${{ env.ENV_USER }}" = '' ] || [ "${{ env.ENV_PASS }}" = '' ]; then
            echo "::set-output name=can_login::0"
          else
            echo "::set-output name=can_login::1"
          fi
        env:
          ENV_USER: ${{ secrets.dockerhub_username }}
          ENV_PASS: ${{ secrets.dockerhub_password }}

      - name: "[Set-Output] Set Build Matrix & Deploy Matrix"
        id: set-matrix
        shell: bash
        run: |
          if [ "${{ inputs.refs }}" != "" ]; then
            MATRIX_BUILD="$( \
              jq -M -c \
                --argjson refs   '${{ inputs.refs }}' \
                'map({name:.NAME, version:.VERSION[], flavour:.FLAVOUR[], arch:.ARCH[], refs:$refs[]})' <<<'${{ inputs.matrix }}' \
            )"
            MATRIX_DEPLOY="$( \
              jq -M -c \
                --argjson refs   '${{ inputs.refs }}' \
                'map({name:.NAME, version:.VERSION[], flavour:.FLAVOUR[], refs:$refs[]})' <<<'${{ inputs.matrix }}' \
            )"
            echo "::set-output name=matrix_build::${MATRIX_BUILD}"
            echo "::set-output name=matrix_deploy::${MATRIX_DEPLOY}"
            echo "::set-output name=has_refs::1"
          else
            MATRIX_BUILD="$( \
              jq -M -c \
                'map({name:.NAME, version:.VERSION[], flavour:.FLAVOUR[], arch:.ARCH[]})' <<<'${{ inputs.matrix }}' \
            )"
            MATRIX_DEPLOY="$( \
              jq -M -c \
                'map({name:.NAME, version:.VERSION[], flavour:.FLAVOUR[]})' <<<'${{ inputs.matrix }}' \
            )"
            echo "::set-output name=matrix_build::${MATRIX_BUILD}"
            echo "::set-output name=matrix_deploy::${MATRIX_DEPLOY}"
            echo "::set-output name=has_refs::0"
          fi

      - name: "[Set-Output] Set unique Artifact prefix"
        id: set-artifact-prefix
        shell: bash
        run: |
          PRE_DATE="$( date +"%s" )"
          PRE_RAND="$( echo $RANDOM | md5sum | head -c 10 )"
          echo "::set-output name=prefix::${PRE_DATE}-${PRE_RAND}"

      - name: "[DEBUG] SHow Workflow Inputs"
        shell: bash
        run: |
          echo 'enabled: ${{ inputs.enabled }} '
          echo 'can_deploy: ${{ inputs.can_deploy }} '
          echo 'matrix: ${{ inputs.matrix }} '
          echo 'refs: ${{ inputs.refs }} '

      - name: "[DEBUG] Show Determined Settings"
        shell: bash
        run: |
          echo 'can_login=${{ steps.set-login.outputs.can_login }}'
          echo 'has_refs=${{ steps.set-matrix.outputs.has_refs }}'
          echo 'matrix_build=${{ steps.set-matrix.outputs.matrix_build }}'
          echo 'matrix_deploy=${{ steps.set-matrix.outputs.matrix_deploy }}'
          echo 'artifact_prefix=${{ steps.set-artifact-prefix.outputs.prefix }}
