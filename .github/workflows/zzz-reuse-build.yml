---
name: Build multi-arch images

on:
  workflow_call:
    ###
    ### Variables
    ###
    inputs:
      enabled:
        description: 'Determines wheather this workflow is enabled at all (will run or skip).'
        required: true
        type: boolean
      can_deploy:
        description: 'Determines wheather this workflow will also deploy (login and push).'
        required: true
        type: boolean
      build_matrix:
        description: 'The build matrix'
        required: true
        type: string
      has_refs:
        description: 'The ref build matrix as JSON string (list of git refs to build/deploy).'
        required: true
        type: string
      artifact_prefix:
        description: 'Unique artifact name prefix (to avoid overriding existing artifcats during parallel runs).'
        required: true
        type: string
      flavour:
        description: 'The flavour to build (base, mods, prod or work).'
        required: true
        type: string
    ###
    ### Secrets
    ###
    secrets:
      dockerhub_username:
        description: 'The username for Dockerhub.'
        required: false
      dockerhub_password:
        description: 'The password for Dockerhub.'
        required: false

jobs:
  # -----------------------------------------------------------------------------------------------
  # JOB: BUILD
  # -----------------------------------------------------------------------------------------------
  build:
    name: ${{ matrix.name }}-${{ matrix.version }}-${{ inputs.flavour }} (${{ matrix.arch }}) ${{ matrix.refs }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.build_matrix) }}
    if: inputs.enabled
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: "[SETUP] Checkout repository (current)"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: inputs.has_refs == 0

      - name: "[SETUP] Checkout repository (ref: ${{ matrix.refs }})"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.refs }}
        if: inputs.has_refs != 0

      - name: "[SETUP] Setup QEMU environment"
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: "[SETUP] Set artifact names"
        id: set-artifact-name
        run: |
          PRE_HASH="$( git rev-parse HEAD | head -c 10 )"
          VERSION="${{ matrix.version }}"
          ARCH="$( echo "${{ matrix.arch }}" | sed 's|/|-|g' )"

          NAME_BASE="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-base"
          NAME_MODS="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-mods"
          NAME_PROD="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-prod"
          NAME_WORK="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-work"

          echo "::set-output name=base::${NAME_BASE}"
          echo "::set-output name=mods::${NAME_MODS}"
          echo "::set-output name=prod::${NAME_PROD}"
          echo "::set-output name=work::${NAME_WORK}"

      # ------------------------------------------------------------
      # Artifact Import
      # ------------------------------------------------------------

      ###
      ### Download and import base
      ###
      - name: "[Artifact Load] Download base"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/download-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.base }}
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'mods' }}

      - name: "[Artifact Load] Import base"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make load INFILE=${{ steps.set-artifact-name.outputs.base }}
        if: ${{ inputs.flavour == 'mods' }}

      ###
      ### Download and import mods
      ###
      - name: "[Artifact Load] Download mods"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/download-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.mods }}
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'prod' }}

      - name: "[Artifact Load] Import mods"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make load INFILE=${{ steps.set-artifact-name.outputs.mods }}
        if: ${{ inputs.flavour == 'prod' }}

      ###
      ### Download and import prod
      ###
      - name: "[Artifact Load] Download prod"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/download-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.prod }}
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'work' }}

      - name: "[Artifact Load] Import prod"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make load INFILE=${{ steps.set-artifact-name.outputs.prod }}
        if: ${{ inputs.flavour == 'work' }}


      # ------------------------------------------------------------
      # Build
      # ------------------------------------------------------------
      - name: Build
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make build VERSION=${{ matrix.version }} FLAVOUR=${{ inputs.flavour }} ARCH=${{ matrix.arch }}


      # ------------------------------------------------------------
      # Artifact Expot (base)
      # ------------------------------------------------------------

      ###
      ### Export and Upload base
      ###
      - name: "[Artifact Save] Export base"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make save-verify VERSION=${{ matrix.version }} FLAVOUR=base ARCH=${{ matrix.arch }} OUTFILE=${{ steps.set-artifact-name.outputs.base }} INFILE=${{ steps.set-artifact-name.outputs.base }}
        if: ${{ inputs.flavour == 'base' }}

      ###
      ### Try 1
      ###
      - name: "[Artifact Save] Upload base"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.base }}
            path: ${{ steps.set-artifact-name.outputs.base }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'base' }}

      - name: "[Artifact Save] Download base (verify)"
        continue-on-error: true
        id: download-base-1
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.base }}
          path: ${{ steps.set-artifact-name.outputs.base }}.tmp
        if: ${{ inputs.flavour == 'base' }}

      ###
      ### Try 2
      ###
      - name: "[Artifact Save] Upload base (retry)"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.base }}
            path: ${{ steps.set-artifact-name.outputs.base }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'base' && steps.download-base-1.outcome == 'failure'}}

      - name: "[Artifact Save] Download base (verify 2)"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.base }}
          path: ${{ steps.set-artifact-name.outputs.base }}.tmp
        if: ${{ inputs.flavour == 'base' && steps.download-base-1.outcome == 'failure'}}


      # ------------------------------------------------------------
      # Artifact Expot (mods)
      # ------------------------------------------------------------

      ###
      ### Export and Upload mods
      ###
      - name: "[Artifact Save] Export mods"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make save-verify VERSION=${{ matrix.version }} FLAVOUR=mods ARCH=${{ matrix.arch }} OUTFILE=${{ steps.set-artifact-name.outputs.mods }} INFILE=${{ steps.set-artifact-name.outputs.mods }}
        if: ${{ inputs.flavour == 'mods' }}

      ###
      ### Try 1
      ###
      - name: "[Artifact Save] Upload mods"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.mods }}
            path: ${{ steps.set-artifact-name.outputs.mods }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'mods' }}

      - name: "[Artifact Save] Download mods (verify)"
        continue-on-error: true
        id: download-mods-1
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.mods }}
          path: ${{ steps.set-artifact-name.outputs.mods }}.tmp
        if: ${{ inputs.flavour == 'mods' }}

      ###
      ### Try 2
      ###
      - name: "[Artifact Save] Upload mods (retry)"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.mods }}
            path: ${{ steps.set-artifact-name.outputs.mods }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'mods' && steps.download-mods-1.outcome == 'failure'}}

      - name: "[Artifact Save] Download mods (verify 2)"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.mods }}
          path: ${{ steps.set-artifact-name.outputs.mods }}.tmp
        if: ${{ inputs.flavour == 'mods' && steps.download-mods-1.outcome == 'failure'}}


      # ------------------------------------------------------------
      # Artifact Expot (prod)
      # ------------------------------------------------------------

      ###
      ### Export and Upload prod
      ###
      - name: "[Artifact Save] Export prod"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make save-verify VERSION=${{ matrix.version }} FLAVOUR=prod ARCH=${{ matrix.arch }} OUTFILE=${{ steps.set-artifact-name.outputs.prod }} INFILE=${{ steps.set-artifact-name.outputs.prod }}
        if: ${{ inputs.flavour == 'prod' }}

      ###
      ### Try 1
      ###
      - name: "[Artifact Save] Upload prod"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.prod }}
            path: ${{ steps.set-artifact-name.outputs.prod }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'prod' }}

      - name: "[Artifact Save] Download prod (verify)"
        continue-on-error: true
        id: download-prod-1
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.prod }}
          path: ${{ steps.set-artifact-name.outputs.prod }}.tmp
        if: ${{ inputs.flavour == 'prod' }}

      ###
      ### Try 2
      ###
      - name: "[Artifact Save] Upload prod (retry)"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.prod }}
            path: ${{ steps.set-artifact-name.outputs.prod }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'prod' && steps.download-prod-1.outcome == 'failure'}}

      - name: "[Artifact Save] Download prod (verify 2)"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.prod }}
          path: ${{ steps.set-artifact-name.outputs.prod }}.tmp
        if: ${{ inputs.flavour == 'prod' && steps.download-prod-1.outcome == 'failure'}}


      # ------------------------------------------------------------
      # Artifact Expot (work)
      # ------------------------------------------------------------

      ###
      ### Export and Upload work
      ###
      - name: "[Artifact Save] Export work"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            make save-verify VERSION=${{ matrix.version }} FLAVOUR=work ARCH=${{ matrix.arch }} OUTFILE=${{ steps.set-artifact-name.outputs.work }} INFILE=${{ steps.set-artifact-name.outputs.work }}
        if: ${{ inputs.flavour == 'work' }}

      ###
      ### Try 1
      ###
      - name: "[Artifact Save] Upload work"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.work }}
            path: ${{ steps.set-artifact-name.outputs.work }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'work' }}

      - name: "[Artifact Save] Download work (verify)"
        continue-on-error: true
        id: download-work-1
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.work }}
          path: ${{ steps.set-artifact-name.outputs.work }}.tmp
        if: ${{ inputs.flavour == 'work' }}

      ###
      ### Try 2
      ###
      - name: "[Artifact Save] Upload work (retry)"
        uses: Wandalen/wretry.action@v1.0.11
        with:
          action: actions/upload-artifact@v3
          with: |
            name: ${{ steps.set-artifact-name.outputs.work }}
            path: ${{ steps.set-artifact-name.outputs.work }}
            if-no-files-found: error
          attempt_limit: 20
          attempt_delay: 10000
        if: ${{ inputs.flavour == 'work' && steps.download-work-1.outcome == 'failure'}}

      - name: "[Artifact Save] Download work (verify 2)"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.work }}
          path: ${{ steps.set-artifact-name.outputs.work }}.tmp
        if: ${{ inputs.flavour == 'work' && steps.download-work-1.outcome == 'failure'}}
